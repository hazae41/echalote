{"version":3,"file":"tor.cjs","sources":["../../../../src/mods/tor/tor.ts"],"sourcesContent":["import { Berith } from \"@hazae41/berith\";\nimport { Foras } from \"@hazae41/foras\";\nimport { Morax, Sha1Hasher } from \"@hazae41/morax\";\nimport { Paimon } from \"@hazae41/paimon\";\nimport { Aes128Ctr128BEKey, Zepar } from \"@hazae41/zepar\";\nimport { Binary } from \"libs/binary.js\";\nimport { Bitmask } from \"libs/bits.js\";\nimport { Events } from \"libs/events.js\";\nimport { Future } from \"libs/future.js\";\nimport { Tls } from \"mods/tls/tls.js\";\nimport { kdftor } from \"mods/tor/algos/kdftor.js\";\nimport { TypedAddress } from \"mods/tor/binary/address.js\";\nimport { Cell, NewCell, OldCell } from \"mods/tor/binary/cells/cell.js\";\nimport { AuthChallengeCell } from \"mods/tor/binary/cells/direct/auth_challenge.js\";\nimport { Certs, CertsCell } from \"mods/tor/binary/cells/direct/certs.js\";\nimport { CreatedFastCell } from \"mods/tor/binary/cells/direct/created_fast.js\";\nimport { CreateFastCell } from \"mods/tor/binary/cells/direct/create_fast.js\";\nimport { DestroyCell } from \"mods/tor/binary/cells/direct/destroy.js\";\nimport { NetinfoCell } from \"mods/tor/binary/cells/direct/netinfo.js\";\nimport { PaddingCell } from \"mods/tor/binary/cells/direct/padding.js\";\nimport { PaddingNegociateCell } from \"mods/tor/binary/cells/direct/padding_negotiate.js\";\nimport { RelayCell } from \"mods/tor/binary/cells/direct/relay.js\";\nimport { VersionsCell } from \"mods/tor/binary/cells/direct/versions.js\";\nimport { VariablePaddingCell } from \"mods/tor/binary/cells/direct/vpadding.js\";\nimport { RelayConnectedCell } from \"mods/tor/binary/cells/relayed/relay_connected.js\";\nimport { RelayDataCell } from \"mods/tor/binary/cells/relayed/relay_data.js\";\nimport { RelayDropCell } from \"mods/tor/binary/cells/relayed/relay_drop.js\";\nimport { RelayEndCell } from \"mods/tor/binary/cells/relayed/relay_end.js\";\nimport { RelayExtended2Cell } from \"mods/tor/binary/cells/relayed/relay_extended2.js\";\nimport { RelayTruncatedCell } from \"mods/tor/binary/cells/relayed/relay_truncated.js\";\nimport { Circuit } from \"mods/tor/circuit.js\";\nimport { Directories } from \"mods/tor/consensus/directories.js\";\nimport { Target } from \"mods/tor/target.js\";\n\nexport type TorState =\n  | TorNoneState\n  | TorVersionedState\n  | TorHandshakingState\n  | TorHandshakedState\n\nexport interface TorNoneState {\n  readonly type: \"none\"\n}\n\nexport interface TorVersionedState {\n  readonly type: \"versioned\",\n  readonly version: number\n}\n\nexport interface TorHandshakingState {\n  readonly type: \"handshaking\",\n  readonly version: number\n  readonly guard: Guard\n}\n\nexport interface TorHandshakedState {\n  readonly type: \"handshaked\",\n  readonly version: number\n  readonly guard: Guard\n}\n\nexport interface Guard {\n  readonly idh: Buffer\n  readonly certs: Certs\n}\n\nexport interface Fallback {\n  id: string,\n  eid: string,\n  exit: boolean,\n  onion: number[]\n  hosts: string[]\n}\n\nexport class Tor extends EventTarget {\n  readonly class = Tor\n\n  private _state: TorState = { type: \"none\" }\n\n  readonly directories = new Directories(this)\n  readonly circuits = new Map<number, Circuit>()\n\n  readonly streams = new TransformStream<Buffer, Buffer>()\n\n  private buffer = Buffer.allocUnsafe(4 * 4096)\n  private wbuffer = new Binary(this.buffer)\n  private rbuffer = new Binary(this.buffer)\n\n  fallbacks = {\n    exits: new Array<Fallback>(),\n    middles: new Array<Fallback>()\n  }\n\n  constructor(\n    readonly tls: Tls\n  ) {\n    super()\n\n    const onMessage = this.onMessage.bind(this)\n    this.tls.addEventListener(\"message\", onMessage, { passive: true })\n\n    this.directories.loadAuthorities()\n\n    this.tryRead().catch(console.error)\n  }\n\n  get state() {\n    return this._state\n  }\n\n  async init() {\n    await Paimon.initBundledOnce()\n    await Berith.initBundledOnce()\n    await Zepar.initBundledOnce()\n    await Morax.initBundledOnce()\n    await Foras.initBundledOnce()\n  }\n\n  send(...arrays: Buffer[]) {\n    let length = 0\n\n    for (let i = 0; i < arrays.length; i++)\n      length += arrays[i].length\n    const packet = Binary.allocUnsafe(length)\n\n    for (const array of arrays)\n      packet.write(array)\n    this.tls.send(packet.buffer)\n  }\n\n  private async onMessage(event: Event) {\n    const message = event as MessageEvent<Buffer>\n\n    const writer = this.streams.writable.getWriter()\n    writer.write(message.data)\n    writer.releaseLock()\n  }\n\n  private async tryRead() {\n    const reader = this.streams.readable.getReader()\n\n    try {\n      await this.read(reader)\n    } finally {\n      reader.releaseLock()\n    }\n  }\n\n  private async read(reader: ReadableStreamReader<Buffer>) {\n    while (true) {\n      const { done, value } = await reader.read()\n\n      if (done) break\n\n      this.wbuffer.write(value)\n      await this.onRead()\n    }\n  }\n\n  private async onRead() {\n    this.rbuffer.buffer = this.buffer.subarray(0, this.wbuffer.offset)\n\n    while (this.rbuffer.remaining) {\n      try {\n        const rawCell = this._state.type === \"none\"\n          ? OldCell.tryRead(this.rbuffer)\n          : NewCell.tryRead(this.rbuffer)\n\n        if (!rawCell) break\n\n        const cell = rawCell.type === \"old\"\n          ? OldCell.unpack(this, rawCell)\n          : NewCell.unpack(this, rawCell)\n\n        await this.onCell(cell)\n      } catch (e: unknown) {\n        console.error(e)\n      }\n    }\n\n    if (!this.rbuffer.offset)\n      return\n\n    if (this.rbuffer.offset === this.wbuffer.offset) {\n      this.rbuffer.offset = 0\n      this.wbuffer.offset = 0\n      return\n    }\n\n    if (this.rbuffer.remaining && this.wbuffer.remaining < 4096) {\n      console.debug(`Reallocating buffer`)\n\n      const remaining = this.buffer.subarray(this.rbuffer.offset, this.wbuffer.offset)\n\n      this.rbuffer.offset = 0\n      this.wbuffer.offset = 0\n\n      this.buffer = Buffer.allocUnsafe(4 * 4096)\n      this.rbuffer.buffer = this.buffer\n      this.wbuffer.buffer = this.buffer\n\n      this.wbuffer.write(remaining)\n      return\n    }\n  }\n\n  private async onCell(cell: Cell) {\n    if (cell.command === PaddingCell.command)\n      return console.debug(`Received PADDING cell`)\n    if (cell.command === VariablePaddingCell.command)\n      return console.debug(`Received VPADDING cell`)\n\n    if (this._state.type === \"none\")\n      return await this.onNoneStateCell(cell)\n    if (cell instanceof OldCell)\n      throw new Error(`Can't uncell post-version cell from old cell`)\n\n    if (this._state.type === \"versioned\")\n      return await this.onVersionedStateCell(cell)\n    if (this._state.type === \"handshaking\")\n      return await this.onHandshakingStateCell(cell)\n    if (this._state.type === \"handshaked\")\n      return await this.onHandshakedStateCell(cell)\n\n    throw new Error(`Unknown state`)\n  }\n\n  private async onNoneStateCell(cell: Cell) {\n    if (this._state.type !== \"none\")\n      throw new Error(`State is not none`)\n    if (cell instanceof NewCell)\n      throw new Error(`Can't uncell pre-version cell from new cell`)\n\n    if (cell.command === VersionsCell.command)\n      return await this.onVersionsCell(cell)\n\n    console.debug(`Unknown pre-version cell ${cell.command}`)\n  }\n\n  private async onVersionedStateCell(cell: NewCell) {\n    if (this._state.type !== \"versioned\")\n      throw new Error(`State is not versioned`)\n\n    if (cell.command === CertsCell.command)\n      return await this.onCertsCell(cell)\n\n    console.debug(`Unknown versioned-state cell ${cell.command}`)\n  }\n\n  private async onHandshakingStateCell(cell: NewCell) {\n    if (this._state.type !== \"handshaking\")\n      throw new Error(`State is not handshaking`)\n\n    if (cell.command === AuthChallengeCell.command)\n      return await this.onAuthChallengeCell(cell)\n    if (cell.command === NetinfoCell.command)\n      return await this.onNetinfoCell(cell)\n\n    console.debug(`Unknown handshaking-state cell ${cell.command}`)\n  }\n\n  private async onHandshakedStateCell(cell: NewCell) {\n    if (cell.command === CreatedFastCell.command)\n      return await this.onCreatedFastCell(cell)\n    if (cell.command === DestroyCell.command)\n      return await this.onDestroyCell(cell)\n    if (cell.command === RelayCell.command)\n      return await this.onRelayCell(cell)\n\n    console.debug(`Unknown handshaked-state cell ${cell.command}`)\n  }\n\n  private async onVersionsCell(cell: OldCell) {\n    if (this._state.type !== \"none\")\n      throw new Error(`State is not none`)\n\n    const data = VersionsCell.uncell(cell)\n\n    const event = new MessageEvent(\"VERSIONS\", { data })\n    if (!this.dispatchEvent(event)) return\n\n    if (!data.versions.includes(5))\n      throw new Error(`Incompatible versions`)\n\n    this._state = { type: \"versioned\", version: 5 }\n\n    const event2 = new MessageEvent(\"versioned\", { data: 5 })\n    if (!this.dispatchEvent(event2)) return\n\n    console.debug(`VERSIONS`, data)\n  }\n\n  private async onCertsCell(cell: NewCell) {\n    if (this._state.type !== \"versioned\")\n      throw new Error(`State is not versioned`)\n\n    const data = CertsCell.uncell(cell)\n\n    const event = new MessageEvent(\"CERTS\", { data })\n    if (!this.dispatchEvent(event)) return\n\n    const idh = await data.getIdHash()\n\n    await data.checkId()\n    await data.checkIdToTls()\n    await data.checkIdToEid()\n    data.checkEidToSigning()\n    data.checkSigningToTls()\n\n    const { certs } = data\n    const guard = { certs, idh }\n\n    const { version } = this._state\n    this._state = { type: \"handshaking\", version, guard }\n\n    const event2 = new MessageEvent(\"handshaking\", {})\n    if (!this.dispatchEvent(event2)) return\n\n    console.debug(`CERTS`, data)\n  }\n\n  private async onAuthChallengeCell(cell: NewCell) {\n    if (this._state.type !== \"handshaking\")\n      throw new Error(`State is not handshaking`)\n\n    const data = AuthChallengeCell.uncell(cell)\n\n    const event = new MessageEvent(\"AUTH_CHALLENGE\", { data })\n    if (!this.dispatchEvent(event)) return\n\n    console.debug(`AUTH_CHALLENGE`, data)\n  }\n\n  private async onNetinfoCell(cell: NewCell) {\n    if (this._state.type !== \"handshaking\")\n      throw new Error(`State is not handshaking`)\n\n    const data = NetinfoCell.uncell(cell)\n\n    const event = new MessageEvent(\"NETINFO\", { data })\n    if (!this.dispatchEvent(event)) return\n\n    const address = new TypedAddress(4, Buffer.from([127, 0, 0, 1]))\n    const netinfo = new NetinfoCell(undefined, 0, address, [])\n    const pversion = PaddingNegociateCell.versions.ZERO\n    const pcommand = PaddingNegociateCell.commands.STOP\n    const padding = new PaddingNegociateCell(undefined, pversion, pcommand, 0, 0)\n    this.send(netinfo.pack(), padding.pack())\n\n    const { version, guard } = this._state\n    this._state = { type: \"handshaked\", version, guard }\n\n    const event2 = new MessageEvent(\"handshake\", {})\n    if (!this.dispatchEvent(event2)) return\n\n    console.debug(`NETINFO`, data)\n  }\n\n  private async onCreatedFastCell(cell: NewCell) {\n    const data = CreatedFastCell.uncell(cell)\n\n    const event = new MessageEvent(\"CREATED_FAST\", { data })\n    if (!this.dispatchEvent(event)) return\n\n    console.debug(`CREATED_FAST`, data)\n  }\n\n  private async onDestroyCell(cell: NewCell) {\n    const data = DestroyCell.uncell(cell)\n\n    const event = new MessageEvent(\"DESTROY\", { data })\n    if (!this.dispatchEvent(event)) return\n\n    this.circuits.delete(data.circuit.id)\n\n    console.debug(`DESTROY`, data)\n  }\n\n  private async onRelayCell(parent: NewCell) {\n    const cell = await RelayCell.uncell(parent)\n\n    if (cell.rcommand === RelayExtended2Cell.rcommand)\n      return await this.onRelayExtended2Cell(cell)\n    if (cell.rcommand === RelayConnectedCell.rcommand)\n      return await this.onRelayConnectedCell(cell)\n    if (cell.rcommand === RelayDataCell.rcommand)\n      return await this.onRelayDataCell(cell)\n    if (cell.rcommand === RelayEndCell.rcommand)\n      return await this.onRelayEndCell(cell)\n    if (cell.rcommand === RelayDropCell.rcommand)\n      return await this.onRelayDropCell(cell)\n    if (cell.rcommand === RelayTruncatedCell.rcommand)\n      return await this.onRelayTruncatedCell(cell)\n\n    console.debug(`Unknown relay cell ${cell.rcommand}`)\n  }\n\n  private async onRelayExtended2Cell(cell: RelayCell) {\n    const data = RelayExtended2Cell.uncell(cell)\n\n    const event = new MessageEvent(\"RELAY_EXTENDED2\", { data })\n    if (!this.dispatchEvent(event)) return\n\n    console.debug(`RELAY_EXTENDED2`, data)\n  }\n\n  private async onRelayConnectedCell(cell: RelayCell) {\n    const data = RelayConnectedCell.uncell(cell)\n\n    const event = new MessageEvent(\"RELAY_CONNECTED\", { data })\n    if (!this.dispatchEvent(event)) return\n\n    console.debug(`RELAY_CONNECTED`, data)\n  }\n\n  private async onRelayDataCell(cell: RelayCell) {\n    const data = RelayDataCell.uncell(cell)\n\n    const event = new MessageEvent(\"RELAY_DATA\", { data })\n    if (!this.dispatchEvent(event)) return\n\n    console.debug(`RELAY_DATA`, data)\n  }\n\n  private async onRelayEndCell(cell: RelayCell) {\n    const data = RelayEndCell.uncell(cell)\n\n    const event = new MessageEvent(\"RELAY_END\", { data })\n    if (!this.dispatchEvent(event)) return\n\n    console.debug(`RELAY_END`, data)\n  }\n\n  private async onRelayDropCell(cell: RelayCell) {\n    const data = RelayDropCell.uncell(cell)\n\n    const event = new MessageEvent(\"RELAY_DROP\", { data })\n    if (!this.dispatchEvent(event)) return\n\n    console.debug(`RELAY_DROP`, data)\n  }\n\n  private async onRelayTruncatedCell(cell: RelayCell) {\n    const data = RelayTruncatedCell.uncell(cell)\n\n    const event = new MessageEvent(\"RELAY_TRUNCATED\", { data })\n    if (!this.dispatchEvent(event)) return\n\n    data.circuit.targets.pop()\n\n    console.debug(`RELAY_TRUNCATED`, data)\n  }\n\n  private async waitHandshake() {\n    const future = new Future<Event, Event>()\n\n    try {\n      this.tls.addEventListener(\"close\", future.err, { passive: true })\n      this.tls.addEventListener(\"error\", future.err, { passive: true })\n      this.addEventListener(\"handshake\", future.ok, { passive: true })\n      await future.promise\n    } catch (e: unknown) {\n      throw Events.error(e)\n    } finally {\n      this.tls.removeEventListener(\"error\", future.err)\n      this.tls.removeEventListener(\"close\", future.err)\n      this.removeEventListener(\"handshake\", future.ok)\n    }\n  }\n\n  async handshake() {\n    await this.tls.open()\n\n    const handshake = this.waitHandshake()\n    this.send(new VersionsCell(undefined, [5]).pack())\n    await handshake\n  }\n\n  private async waitCreatedFast(circuit: Circuit) {\n    const future = new Future<CreatedFastCell, Event>()\n\n    const onCreatedFastCell = (event: Event) => {\n      const message = event as MessageEvent<CreatedFastCell>\n      if (message.data.circuit === circuit) future.ok(message.data)\n    }\n\n    try {\n      this.tls.addEventListener(\"close\", future.err, { passive: true })\n      this.tls.addEventListener(\"error\", future.err, { passive: true })\n      this.addEventListener(\"CREATED_FAST\", onCreatedFastCell, { passive: true })\n      return await future.promise\n    } catch (e: unknown) {\n      throw Events.error(e)\n    } finally {\n      this.tls.removeEventListener(\"error\", future.err)\n      this.tls.removeEventListener(\"close\", future.err)\n      this.removeEventListener(\"CREATED_FAST\", onCreatedFastCell)\n    }\n  }\n\n  async create() {\n    if (this._state.type !== \"handshaked\")\n      throw new Error(`Can't create a circuit yet`)\n\n    const circuitId = new Bitmask(Date.now())\n      .set(31, true)\n      .export()\n\n    const circuit = new Circuit(this, circuitId)\n    this.circuits.set(circuitId, circuit)\n\n    const material = Buffer.allocUnsafe(20)\n    crypto.getRandomValues(material)\n\n    const pcreated = this.waitCreatedFast(circuit)\n    this.send(new CreateFastCell(circuit, material).pack())\n    const created = await pcreated\n\n    const k0 = Buffer.concat([material, created.material])\n    const result = await kdftor(k0)\n\n    if (!result.keyHash.equals(created.derivative))\n      throw new Error(`Invalid KDF-TOR key hash`)\n\n    const forwardDigest = new Sha1Hasher()\n    const backwardDigest = new Sha1Hasher()\n\n    forwardDigest.update(result.forwardDigest)\n    backwardDigest.update(result.backwardDigest)\n\n    const forwardKey = new Aes128Ctr128BEKey(result.forwardKey, Buffer.alloc(16))\n    const backwardKey = new Aes128Ctr128BEKey(result.backwardKey, Buffer.alloc(16))\n\n    const target = new Target(this._state.guard.idh, circuit, forwardDigest, backwardDigest, forwardKey, backwardKey)\n\n    circuit.targets.push(target)\n\n    return circuit\n  }\n}"],"names":["Directories","Binary","Paimon","Berith","Zepar","Morax","Foras","OldCell","NewCell","cell","PaddingCell","VariablePaddingCell","VersionsCell","CertsCell","AuthChallengeCell","NetinfoCell","CreatedFastCell","DestroyCell","RelayCell","certs","address","TypedAddress","netinfo","PaddingNegociateCell","RelayExtended2Cell","RelayConnectedCell","RelayDataCell","RelayEndCell","RelayDropCell","RelayTruncatedCell","future","Future","Events","Bitmask","circuit","Circuit","CreateFastCell","kdftor","Sha1Hasher","Aes128Ctr128BEKey","target","Target"],"mappings":"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"}