{"version":3,"file":"padding.cjs","sources":["../../../../../../../src/mods/tor/binary/cells/direct/padding.ts"],"sourcesContent":["import { NewCell } from \"mods/tor/binary/cells/cell.js\"\nimport { Circuit } from \"mods/tor/circuit.js\"\nimport { PAYLOAD_LEN } from \"mods/tor/constants.js\"\n\nexport class PaddingCell {\n  readonly class = PaddingCell\n\n  static command = 0\n\n  constructor(\n    readonly circuit: Circuit | undefined,\n    readonly data = Buffer.alloc(PAYLOAD_LEN)\n  ) { }\n\n  pack() {\n    return this.cell().pack()\n  }\n\n  cell() {\n    return new NewCell(this.circuit, this.class.command, this.data)\n  }\n\n  static uncell(cell: NewCell) {\n    if (cell.command !== this.command)\n      throw new Error(`Invalid PADDING cell command ${cell.command}`)\n\n    return new this(cell.circuit, cell.payload)\n  }\n}"],"names":["PAYLOAD_LEN","NewCell"],"mappings":";;;;;MAIa,WAAW,CAAA;IAKtB,WACW,CAAA,OAA4B,EAC5B,IAAO,GAAA,MAAM,CAAC,KAAK,CAACA,qBAAW,CAAC,EAAA;QADhC,IAAO,CAAA,OAAA,GAAP,OAAO,CAAqB;QAC5B,IAAI,CAAA,IAAA,GAAJ,IAAI,CAA4B;QANlC,IAAK,CAAA,KAAA,GAAG,WAAW,CAAA;KAOvB;IAEL,IAAI,GAAA;AACF,QAAA,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAA;KAC1B;IAED,IAAI,GAAA;AACF,QAAA,OAAO,IAAIC,YAAO,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,CAAA;KAChE;IAED,OAAO,MAAM,CAAC,IAAa,EAAA;AACzB,QAAA,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,OAAO;YAC/B,MAAM,IAAI,KAAK,CAAC,CAAA,6BAAA,EAAgC,IAAI,CAAC,OAAO,CAAE,CAAA,CAAC,CAAA;QAEjE,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAA;KAC5C;;AApBM,WAAO,CAAA,OAAA,GAAG,CAAC;;;;"}