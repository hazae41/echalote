{"version":3,"file":"padding.cjs","sources":["../../../../../../../src/mods/tor/binary/cells/direct/padding.ts"],"sourcesContent":["import { NewCell } from \"mods/tor/binary/cells/cell.js\"\nimport { InvalidCircuit, InvalidCommand } from \"mods/tor/binary/cells/errors.js\"\nimport { PAYLOAD_LEN } from \"mods/tor/constants.js\"\n\nexport class PaddingCell {\n  readonly class = PaddingCell\n\n  static command = 0\n\n  constructor(\n    readonly circuit: undefined,\n    readonly data = Buffer.alloc(PAYLOAD_LEN)\n  ) { }\n\n  pack() {\n    return this.cell().pack()\n  }\n\n  cell() {\n    return new NewCell(this.circuit, this.class.command, this.data)\n  }\n\n  static uncell(cell: NewCell) {\n    if (cell.command !== this.command)\n      throw new InvalidCommand(this.name, cell.command)\n    if (cell.circuit)\n      throw new InvalidCircuit(this.name, cell.circuit)\n\n    return new this(cell.circuit, cell.payload)\n  }\n}"],"names":["PAYLOAD_LEN","NewCell","InvalidCommand","InvalidCircuit"],"mappings":";;;;;;MAIa,WAAW,CAAA;IAKtB,WACW,CAAA,OAAkB,EAClB,IAAO,GAAA,MAAM,CAAC,KAAK,CAACA,qBAAW,CAAC,EAAA;QADhC,IAAO,CAAA,OAAA,GAAP,OAAO,CAAW;QAClB,IAAI,CAAA,IAAA,GAAJ,IAAI,CAA4B;QANlC,IAAK,CAAA,KAAA,GAAG,WAAW,CAAA;KAOvB;IAEL,IAAI,GAAA;AACF,QAAA,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAA;KAC1B;IAED,IAAI,GAAA;AACF,QAAA,OAAO,IAAIC,YAAO,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,CAAA;KAChE;IAED,OAAO,MAAM,CAAC,IAAa,EAAA;AACzB,QAAA,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,OAAO;YAC/B,MAAM,IAAIC,qBAAc,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAA;QACnD,IAAI,IAAI,CAAC,OAAO;YACd,MAAM,IAAIC,qBAAc,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAA;QAEnD,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAA;KAC5C;;AAtBM,WAAO,CAAA,OAAA,GAAG,CAAC;;;;"}