{"version":3,"file":"netinfo.cjs","sources":["../../../../../../../src/mods/tor/binary/cells/direct/netinfo.ts"],"sourcesContent":["import { Binary } from \"libs/binary.js\";\nimport { TypedAddress } from \"mods/tor/binary/address.js\";\nimport { NewCell } from \"mods/tor/binary/cells/cell.js\";\nimport { InvalidCircuit, InvalidCommand } from \"mods/tor/binary/cells/errors.js\";\nimport { PAYLOAD_LEN } from \"mods/tor/constants.js\";\n\nexport class NetinfoCell {\n  readonly class = NetinfoCell\n\n  static command = 8\n\n  constructor(\n    readonly circuit: undefined,\n    readonly time: number,\n    readonly other: TypedAddress,\n    readonly owneds: TypedAddress[]\n  ) { }\n\n  pack() {\n    return this.cell().pack()\n  }\n\n  cell() {\n    const binary = Binary.allocUnsafe(PAYLOAD_LEN)\n\n    binary.writeUint32(this.time)\n    this.other.write(binary)\n    binary.writeUint8(this.owneds.length)\n\n    for (const owned of this.owneds)\n      owned.write(binary)\n\n    binary.fill()\n\n    return new NewCell(this.circuit, this.class.command, binary.buffer)\n  }\n\n  static uncell(cell: NewCell) {\n    if (cell.command !== this.command)\n      throw new InvalidCommand(this.name, cell.command)\n    if (cell.circuit)\n      throw new InvalidCircuit(this.name, cell.circuit)\n\n    const binary = new Binary(cell.payload)\n\n    const time = binary.readUint32()\n    const other = TypedAddress.read(binary)\n    const nowneds = binary.readUint8()\n    const owneds = new Array<TypedAddress>(nowneds)\n\n    for (let i = 0; i < nowneds; i++)\n      owneds[i] = TypedAddress.read(binary)\n\n    return new this(cell.circuit, time, other, owneds)\n  }\n}"],"names":["binary","Binary","PAYLOAD_LEN","NewCell","InvalidCommand","InvalidCircuit","TypedAddress"],"mappings":";;;;;;;;MAMa,WAAW,CAAA;AAKtB,IAAA,WAAA,CACW,OAAkB,EAClB,IAAY,EACZ,KAAmB,EACnB,MAAsB,EAAA;QAHtB,IAAO,CAAA,OAAA,GAAP,OAAO,CAAW;QAClB,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAQ;QACZ,IAAK,CAAA,KAAA,GAAL,KAAK,CAAc;QACnB,IAAM,CAAA,MAAA,GAAN,MAAM,CAAgB;QARxB,IAAK,CAAA,KAAA,GAAG,WAAW,CAAA;KASvB;IAEL,IAAI,GAAA;AACF,QAAA,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAA;KAC1B;IAED,IAAI,GAAA;QACF,MAAMA,QAAM,GAAGC,aAAM,CAAC,WAAW,CAACC,qBAAW,CAAC,CAAA;AAE9C,QAAAF,QAAM,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;AAC7B,QAAA,IAAI,CAAC,KAAK,CAAC,KAAK,CAACA,QAAM,CAAC,CAAA;QACxBA,QAAM,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA;AAErC,QAAA,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,MAAM;AAC7B,YAAA,KAAK,CAAC,KAAK,CAACA,QAAM,CAAC,CAAA;QAErBA,QAAM,CAAC,IAAI,EAAE,CAAA;AAEb,QAAA,OAAO,IAAIG,YAAO,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,EAAEH,QAAM,CAAC,MAAM,CAAC,CAAA;KACpE;IAED,OAAO,MAAM,CAAC,IAAa,EAAA;AACzB,QAAA,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,OAAO;YAC/B,MAAM,IAAII,qBAAc,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAA;QACnD,IAAI,IAAI,CAAC,OAAO;YACd,MAAM,IAAIC,qBAAc,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAA;QAEnD,MAAML,QAAM,GAAG,IAAIC,aAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;AAEvC,QAAA,MAAM,IAAI,GAAGD,QAAM,CAAC,UAAU,EAAE,CAAA;QAChC,MAAM,KAAK,GAAGM,oBAAY,CAAC,IAAI,CAACN,QAAM,CAAC,CAAA;AACvC,QAAA,MAAM,OAAO,GAAGA,QAAM,CAAC,SAAS,EAAE,CAAA;AAClC,QAAA,MAAM,MAAM,GAAG,IAAI,KAAK,CAAe,OAAO,CAAC,CAAA;QAE/C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE;YAC9B,MAAM,CAAC,CAAC,CAAC,GAAGM,oBAAY,CAAC,IAAI,CAACN,QAAM,CAAC,CAAA;AAEvC,QAAA,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,CAAA;KACnD;;AA7CM,WAAO,CAAA,OAAA,GAAG,CAAC;;;;"}