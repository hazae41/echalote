{"version":3,"file":"relay_end.cjs","sources":["../../../../../../../src/mods/tor/binary/cells/relayed/relay_end.ts"],"sourcesContent":["import { Binary } from \"libs/binary.js\";\nimport { dateToTtl, ttlToDate } from \"libs/time.js\";\nimport { Address4, Address6 } from \"mods/tor/binary/address.js\";\nimport { RelayCell } from \"mods/tor/binary/cells/direct/relay.js\";\nimport { Circuit } from \"mods/tor/circuit.js\";\nimport { PAYLOAD_LEN } from \"mods/tor/constants.js\";\nimport { TcpStream } from \"mods/tor/streams/tcp.js\";\n\nexport type RelayEndCellReason =\n  | RelayEndCellReasonExitPolicy\n  | RelayEndCellReasonOther\n\nexport class RelayEndCellReasonOther {\n  readonly class = RelayEndCellReasonOther\n\n  constructor(\n    readonly id: number\n  ) { }\n\n  write(binary: Binary) { }\n}\n\nexport class RelayEndCellReasonExitPolicy {\n  readonly class = RelayEndCellReasonExitPolicy\n\n  static id = 4\n\n  constructor(\n    readonly address: Address4 | Address6,\n    readonly ttl: Date\n  ) { }\n\n  get id() {\n    return this.class.id\n  }\n\n  write(binary: Binary) {\n    this.address.write(binary)\n    binary.writeUint32(dateToTtl(this.ttl))\n  }\n\n  static read(binary: Binary) {\n    const address = binary.remaining === 8\n      ? Address4.read(binary)\n      : Address6.read(binary)\n\n    const ttl = ttlToDate(binary.readUint32())\n\n    return new this(address, ttl)\n  }\n}\n\nexport class RelayEndCell {\n  readonly class = RelayEndCell\n\n  static rcommand = 3\n\n  static reasons = {\n    REASON_UNKNOWN: 0,\n    REASON_MISC: 1,\n    REASON_RESOLVEFAILED: 2,\n    REASON_CONNECTREFUSED: 3,\n    REASON_EXITPOLICY: 4,\n    REASON_DESTROY: 5,\n    REASON_DONE: 6,\n    REASON_TIMEOUT: 7,\n    REASON_NOROUTE: 8,\n    REASON_HIBERNATING: 9,\n    REASON_INTERNAL: 10,\n    REASON_RESOURCELIMIT: 11,\n    REASON_CONNRESET: 12,\n    REASON_TORPROTOCOL: 13,\n    REASON_NOTDIRECTORY: 14,\n  } as const\n\n  constructor(\n    readonly circuit: Circuit,\n    readonly stream: TcpStream,\n    readonly reason: RelayEndCellReason\n  ) { }\n\n  async pack() {\n    return await this.cell().pack()\n  }\n\n  cell() {\n    const binary = Binary.allocUnsafe(PAYLOAD_LEN)\n\n    binary.writeUint8(this.reason.id)\n    this.reason.write(binary)\n\n    return new RelayCell(this.circuit, this.stream, this.class.rcommand, binary.sliced)\n  }\n\n  static uncell(cell: RelayCell) {\n    if (cell.rcommand !== this.rcommand)\n      throw new Error(`Invalid RELAY_END relay cell relay command`)\n    if (!cell.stream)\n      throw new Error(`Can't uncell RELAY_END relay cell on stream 0`)\n\n    const binary = new Binary(cell.data)\n\n    const reasonId = binary.readUint8()\n\n    const reason = reasonId === this.reasons.REASON_EXITPOLICY\n      ? RelayEndCellReasonExitPolicy.read(binary)\n      : new RelayEndCellReasonOther(reasonId)\n\n    return new this(cell.circuit, cell.stream, reason)\n  }\n}"],"names":["dateToTtl","address","Address4","Address6","ttlToDate","binary","Binary","PAYLOAD_LEN","RelayCell"],"mappings":"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"}