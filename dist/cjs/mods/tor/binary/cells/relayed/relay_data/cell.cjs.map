{"version":3,"file":"cell.cjs","sources":["../../../../../../../../src/mods/tor/binary/cells/relayed/relay_data/cell.ts"],"sourcesContent":["import { RelayCell } from \"mods/tor/binary/cells/direct/relay/cell.js\";\nimport { InvalidRelayCommand, InvalidStream } from \"mods/tor/binary/cells/errors.js\";\nimport { Circuit } from \"mods/tor/circuit.js\";\nimport { TcpStream } from \"mods/tor/streams/tcp.js\";\n\nexport class RelayDataCell {\n  readonly class = RelayDataCell\n\n  static rcommand = 2\n\n  constructor(\n    readonly circuit: Circuit,\n    readonly stream: TcpStream,\n    readonly data: Buffer\n  ) { }\n\n  async pack() {\n    return await this.cell().pack()\n  }\n\n  cell() {\n    return new RelayCell(this.circuit, this.stream, this.class.rcommand, this.data)\n  }\n\n  static uncell(cell: RelayCell) {\n    if (cell.rcommand !== this.rcommand)\n      throw new InvalidRelayCommand(this.name, cell.rcommand)\n    if (!cell.stream)\n      throw new InvalidStream(this.name, cell.stream)\n\n    return new this(cell.circuit, cell.stream, cell.data)\n  }\n}"],"names":["RelayCell","InvalidRelayCommand","InvalidStream"],"mappings":";;;;;;MAKa,aAAa,CAAA;AAKxB,IAAA,WAAA,CACW,OAAgB,EAChB,MAAiB,EACjB,IAAY,EAAA;QAFZ,IAAO,CAAA,OAAA,GAAP,OAAO,CAAS;QAChB,IAAM,CAAA,MAAA,GAAN,MAAM,CAAW;QACjB,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAQ;QAPd,IAAK,CAAA,KAAA,GAAG,aAAa,CAAA;KAQzB;IAEC,IAAI,GAAA;;YACR,OAAO,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAA;SAChC,CAAA,CAAA;AAAA,KAAA;IAED,IAAI,GAAA;QACF,OAAO,IAAIA,cAAS,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,CAAA;KAChF;IAED,OAAO,MAAM,CAAC,IAAe,EAAA;AAC3B,QAAA,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,QAAQ;YACjC,MAAM,IAAIC,0BAAmB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAA;QACzD,IAAI,CAAC,IAAI,CAAC,MAAM;YACd,MAAM,IAAIC,oBAAa,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAA;AAEjD,QAAA,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAA;KACtD;;AAvBM,aAAQ,CAAA,QAAA,GAAG,CAAC;;;;"}