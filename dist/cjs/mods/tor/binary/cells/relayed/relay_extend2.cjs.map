{"version":3,"file":"relay_extend2.cjs","sources":["../../../../../../../src/mods/tor/binary/cells/relayed/relay_extend2.ts"],"sourcesContent":["import { Binary } from \"libs/binary.js\"\nimport { RelayEarlyCell } from \"mods/tor/binary/cells/direct/relay_early/cell.js\"\nimport { Circuit } from \"mods/tor/circuit.js\"\nimport { PAYLOAD_LEN } from \"mods/tor/constants.js\"\n\nexport type Link =\n  | LinkIPv4\n  | LinkIPv6\n  | LinkLegacyID\n  | LinkModernID\n\nexport class LinkIPv4 {\n  readonly class = LinkIPv4\n\n  static type = 0\n\n  constructor(\n    readonly hostname: string,\n    readonly port: number,\n  ) { }\n\n  write(binary: Binary) {\n    binary.writeUint8(this.class.type)\n    binary.writeUint8(4 + 2)\n\n    const [a, b, c, d] = this.hostname.split(\".\")\n    binary.writeUint8(Number(a))\n    binary.writeUint8(Number(b))\n    binary.writeUint8(Number(c))\n    binary.writeUint8(Number(d))\n\n    binary.writeUint16(this.port)\n  }\n\n  static from(host: string) {\n    const { hostname, port } = new URL(`http://${host}`)\n    return new this(hostname, Number(port))\n  }\n}\n\nexport class LinkIPv6 {\n  readonly class = LinkIPv6\n\n  static type = 1\n\n  constructor(\n    readonly hostname: string,\n    readonly port: number,\n  ) { }\n\n  write(binary: Binary) {\n    binary.writeUint8(this.class.type)\n    binary.writeUint8(16 + 2)\n\n    const [a, b, c, d, e, f, g, h] = this.hostname.split(\":\")\n    binary.writeUint16(Number(`0x${a}`) || 0)\n    binary.writeUint16(Number(`0x${b}`) || 0)\n    binary.writeUint16(Number(`0x${c}`) || 0)\n    binary.writeUint16(Number(`0x${d}`) || 0)\n    binary.writeUint16(Number(`0x${e}`) || 0)\n    binary.writeUint16(Number(`0x${f}`) || 0)\n    binary.writeUint16(Number(`0x${g}`) || 0)\n    binary.writeUint16(Number(`0x${h}`) || 0)\n\n    binary.writeUint16(this.port)\n  }\n\n  static from(host: string) {\n    const { hostname, port } = new URL(`http://${host}`)\n    return new this(hostname.slice(1, -1), Number(port))\n  }\n}\n\nexport class LinkLegacyID {\n  readonly class = LinkLegacyID\n\n  static type = 2\n\n  constructor(\n    readonly fingerprint: Buffer\n  ) { }\n\n  write(binary: Binary) {\n    binary.writeUint8(this.class.type)\n    binary.writeUint8(20)\n    binary.write(this.fingerprint)\n  }\n}\n\nexport class LinkModernID {\n  readonly class = LinkModernID\n\n  static type = 3\n\n  constructor(\n    readonly fingerprint: Buffer\n  ) { }\n\n  write(binary: Binary) {\n    binary.writeUint8(this.class.type)\n    binary.writeUint8(32)\n    binary.write(this.fingerprint)\n  }\n}\n\nexport class RelayExtend2Cell {\n  readonly class = RelayExtend2Cell\n\n  static rcommand = 14\n\n  static types = {\n    /**\n     * The old, slow, and insecure handshake\n     * @deprecated\n     */\n    TAP: 0,\n    /**\n     * The new, quick, and secure handshake\n     */\n    NTOR: 2\n  }\n\n  constructor(\n    readonly circuit: Circuit,\n    readonly stream: undefined,\n    readonly type: number,\n    readonly links: Link[],\n    readonly data: Buffer\n  ) { }\n\n  async pack() {\n    return await this.cell().pack()\n  }\n\n  cell() {\n    const binary = Binary.allocUnsafe(PAYLOAD_LEN)\n\n    binary.writeUint8(this.links.length)\n\n    for (const link of this.links)\n      link.write(binary)\n\n    binary.writeUint16(this.type)\n    binary.writeUint16(this.data.length)\n    binary.write(this.data)\n\n    return new RelayEarlyCell(this.circuit, this.stream, this.class.rcommand, binary.sliced)\n  }\n}"],"names":["binary","Binary","PAYLOAD_LEN","RelayEarlyCell"],"mappings":"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"}