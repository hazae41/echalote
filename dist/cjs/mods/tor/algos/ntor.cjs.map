{"version":3,"file":"ntor.cjs","sources":["../../../../../src/mods/tor/algos/ntor.ts"],"sourcesContent":["import { Binary } from \"libs/binary.js\"\nimport { HASH_LEN, KEY_LEN } from \"mods/tor/constants.js\"\n\nexport function request(\n  publicx: Buffer,\n  idh: Buffer,\n  oid: Buffer\n) {\n  const binary = Binary.allocUnsafe(20 + 32 + 32)\n\n  binary.write(idh)\n  binary.write(oid)\n  binary.write(publicx)\n\n  return binary.buffer\n}\n\nexport function response(data: Buffer) {\n  const binary = new Binary(data)\n\n  const publicy = binary.read(32)\n  const auth = binary.read(32)\n\n  return { publicy, auth }\n}\n\nexport interface NtorResult {\n  auth: Buffer,\n  nonce: Buffer,\n  forwardDigest: Buffer,\n  backwardDigest: Buffer,\n  forwardKey: Buffer,\n  backwardKey: Buffer\n}\n\nexport async function finalize(\n  sharedxy: Buffer,\n  sharedxb: Buffer,\n  publici: Buffer,\n  publicb: Buffer,\n  publicx: Buffer,\n  publicy: Buffer\n): Promise<NtorResult> {\n  const protoid = \"ntor-curve25519-sha256-1\"\n\n  const secreti = Binary.allocUnsafe(32 + 32 + 20 + 32 + 32 + 32 + protoid.length)\n  secreti.write(sharedxy)\n  secreti.write(sharedxb)\n  secreti.write(publici)\n  secreti.write(publicb)\n  secreti.write(publicx)\n  secreti.write(publicy)\n  secreti.writeString(protoid)\n\n  const t_mac = Buffer.from(`${protoid}:mac`)\n  const t_key = Buffer.from(`${protoid}:key_extract`)\n  const t_verify = Buffer.from(`${protoid}:verify`)\n\n  const hmac = { name: \"HMAC\", hash: \"SHA-256\" }\n\n  const kt_verify = await crypto.subtle.importKey(\"raw\", t_verify, hmac, false, [\"sign\"])\n  const verify = Buffer.from(await crypto.subtle.sign(\"HMAC\", kt_verify, secreti.buffer))\n\n  const server = \"Server\"\n\n  const authi = Binary.allocUnsafe(32 + 20 + 32 + 32 + 32 + protoid.length + server.length)\n  authi.write(verify)\n  authi.write(publici)\n  authi.write(publicb)\n  authi.write(publicy)\n  authi.write(publicx)\n  authi.writeString(protoid)\n  authi.writeString(server)\n\n  const kt_mac = await crypto.subtle.importKey(\"raw\", t_mac, hmac, false, [\"sign\"])\n  const auth = Buffer.from(await crypto.subtle.sign(\"HMAC\", kt_mac, authi.buffer))\n\n  const m_expand = Buffer.from(`${protoid}:key_expand`)\n\n  const hkdf = { name: \"HKDF\", hash: \"SHA-256\", info: m_expand, salt: t_key }\n  const ksecret = await crypto.subtle.importKey(\"raw\", secreti.buffer, \"HKDF\", false, [\"deriveBits\"])\n  const key = Buffer.from(await crypto.subtle.deriveBits(hkdf, ksecret, 8 * ((HASH_LEN * 3) + (KEY_LEN * 2))))\n\n  const k = new Binary(key)\n  const forwardDigest = k.read(HASH_LEN)\n  const backwardDigest = k.read(HASH_LEN)\n  const forwardKey = k.read(KEY_LEN)\n  const backwardKey = k.read(KEY_LEN)\n  const nonce = k.read(HASH_LEN)\n\n  return { forwardDigest, backwardDigest, forwardKey, backwardKey, auth, nonce }\n}"],"names":["binary","Binary","HASH_LEN","KEY_LEN"],"mappings":"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"}