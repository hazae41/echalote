{"version":3,"file":"circuit.cjs","sources":["../../../../src/mods/tor/circuit.ts"],"sourcesContent":["import { X25519PublicKey, X25519StaticSecret } from \"@hazae41/berith\";\nimport { Sha1Hasher } from \"@hazae41/morax\";\nimport { Aes128Ctr128BEKey } from \"@hazae41/zepar\";\nimport { randomOf } from \"libs/array.js\";\nimport { Bitmask } from \"libs/bits.js\";\nimport { Events } from \"libs/events.js\";\nimport { Future } from \"libs/future.js\";\nimport { ntor } from \"mods/tor/algos/index.js\";\nimport { DestroyCell } from \"mods/tor/binary/cells/direct/destroy/cell.js\";\nimport { RelayBeginCell } from \"mods/tor/binary/cells/relayed/relay_begin/cell.js\";\nimport { RelayConnectedCell } from \"mods/tor/binary/cells/relayed/relay_connected/cell.js\";\nimport { RelayDataCell } from \"mods/tor/binary/cells/relayed/relay_data/cell.js\";\nimport { RelayEndCell } from \"mods/tor/binary/cells/relayed/relay_end/cell.js\";\nimport { Link, LinkIPv4, LinkIPv6, LinkLegacyID, LinkModernID, RelayExtend2Cell } from \"mods/tor/binary/cells/relayed/relay_extend2/cell.js\";\nimport { RelayExtended2Cell } from \"mods/tor/binary/cells/relayed/relay_extended2/cell.js\";\nimport { RelayTruncateCell } from \"mods/tor/binary/cells/relayed/relay_truncate/cell.js\";\nimport { RelayTruncatedCell } from \"mods/tor/binary/cells/relayed/relay_truncated/cell.js\";\nimport { HttpStream } from \"mods/tor/streams/http.js\";\nimport { TcpStream } from \"mods/tor/streams/tcp.js\";\nimport { Target } from \"mods/tor/target.js\";\nimport { Fallback, Tor } from \"mods/tor/tor.js\";\n\nexport class Circuit extends EventTarget {\n  readonly class = Circuit\n\n  private _nonce = 1\n  private _closed = false\n\n  readonly targets = new Array<Target>()\n  readonly streams = new Map<number, TcpStream>()\n\n  constructor(\n    readonly tor: Tor,\n    readonly id: number\n  ) {\n    super()\n\n    const onDestroyCell = this.onDestroyCell.bind(this)\n    this.tor.addEventListener(\"DESTROY\", onDestroyCell, { passive: true })\n\n    const onRelayExtended2Cell = this.onRelayExtended2Cell.bind(this)\n    this.tor.addEventListener(\"RELAY_EXTENDED2\", onRelayExtended2Cell, { passive: true })\n\n    const onRelayTruncatedCell = this.onRelayTruncatedCell.bind(this)\n    this.tor.addEventListener(\"RELAY_TRUNCATED\", onRelayTruncatedCell, { passive: true })\n\n    const onRelayConnectedCell = this.onRelayConnectedCell.bind(this)\n    this.tor.addEventListener(\"RELAY_CONNECTED\", onRelayConnectedCell, { passive: true })\n\n    const onRelayDataCell = this.onRelayDataCell.bind(this)\n    this.tor.addEventListener(\"RELAY_DATA\", onRelayDataCell, { passive: true })\n\n    const onRelayEndCell = this.onRelayEndCell.bind(this)\n    this.tor.addEventListener(\"RELAY_END\", onRelayEndCell, { passive: true })\n  }\n\n  get closed() {\n    return this._closed\n  }\n\n  private async onDestroyCell(event: Event) {\n    const message = event as MessageEvent<DestroyCell>\n    if (message.data.circuit !== this) return\n\n    const message2 = Events.clone(message)\n    if (!this.dispatchEvent(message2)) return\n\n    this._closed = true\n  }\n\n  private async onRelayExtended2Cell(event: Event) {\n    const message = event as MessageEvent<RelayExtended2Cell>\n    if (message.data.circuit !== this) return\n\n    const message2 = Events.clone(message)\n    if (!this.dispatchEvent(message2)) return\n  }\n\n  private async onRelayTruncatedCell(event: Event) {\n    const message = event as MessageEvent<RelayTruncatedCell>\n    if (message.data.circuit !== this) return\n\n    const message2 = Events.clone(message)\n    if (!this.dispatchEvent(message2)) return\n  }\n\n  private async onRelayConnectedCell(event: Event) {\n    const message = event as MessageEvent<RelayConnectedCell>\n    if (message.data.circuit !== this) return\n\n    const message2 = Events.clone(message)\n    if (!this.dispatchEvent(message2)) return\n  }\n\n  private async onRelayDataCell(event: Event) {\n    const message = event as MessageEvent<RelayDataCell>\n    if (message.data.circuit !== this) return\n\n    const message2 = Events.clone(message)\n    if (!this.dispatchEvent(message2)) return\n  }\n\n  private async onRelayEndCell(event: Event) {\n    const message = event as MessageEvent<RelayEndCell>\n    if (message.data.circuit !== this) return\n\n    const message2 = Events.clone(message)\n    if (!this.dispatchEvent(message2)) return\n\n    this.streams.delete(message.data.stream.id)\n  }\n\n  private async waitExtended() {\n    const future = new Future<Event, Event>()\n\n    try {\n      this.tor.tls.addEventListener(\"close\", future.err, { passive: true })\n      this.tor.tls.addEventListener(\"error\", future.err, { passive: true })\n      this.addEventListener(\"DESTROY\", future.err, { passive: true })\n      this.addEventListener(\"RELAY_EXTENDED2\", future.ok, { passive: true })\n      return await future.promise as MessageEvent<RelayExtended2Cell>\n    } catch (e: unknown) {\n      throw Events.error(e)\n    } finally {\n      this.tor.tls.removeEventListener(\"error\", future.err)\n      this.tor.tls.removeEventListener(\"close\", future.err)\n      this.removeEventListener(\"DESTROY\", future.err)\n      this.removeEventListener(\"RELAY_EXTENDED2\", future.ok)\n    }\n  }\n\n  async extend(exit: boolean) {\n    const fallback = randomOf(this.tor.fallbacks[exit ? \"exits\" : \"middles\"])\n\n    if (!fallback)\n      throw new Error(\"Can't find fallback\")\n\n    return await this._extend(fallback)\n  }\n\n  async _extend(fallback: Fallback) {\n    const idh = Buffer.from(fallback.id, \"hex\")\n    const eid = Buffer.from(fallback.eid, \"base64\")\n\n    const links: Link[] = fallback.hosts.map(\n      it => it.startsWith(\"[\")\n        ? LinkIPv6.from(it)\n        : LinkIPv4.from(it))\n    links.push(new LinkLegacyID(idh))\n    links.push(new LinkModernID(eid))\n\n    const xsecretx = new X25519StaticSecret()\n    const publicx = Buffer.from(xsecretx.to_public().to_bytes().buffer)\n    const publicb = Buffer.from(fallback.onion)\n\n    const request = ntor.request(publicx, idh, publicb)\n\n    const pextended2 = this.waitExtended()\n    this.tor.send(await new RelayExtend2Cell(this, undefined, RelayExtend2Cell.types.NTOR, links, request).pack())\n    const extended2 = await pextended2\n\n    const response = ntor.response(extended2.data.data)\n\n    const { publicy } = response\n    const xpublicy = new X25519PublicKey(publicy)\n    const xpublicb = new X25519PublicKey(publicb)\n\n    const sharedxy = Buffer.from(xsecretx.diffie_hellman(xpublicy).to_bytes().buffer)\n    const sharedxb = Buffer.from(xsecretx.diffie_hellman(xpublicb).to_bytes().buffer)\n\n    const result = await ntor.finalize(sharedxy, sharedxb, idh, publicb, publicx, publicy)\n\n    const forwardDigest = new Sha1Hasher()\n    const backwardDigest = new Sha1Hasher()\n\n    forwardDigest.update(result.forwardDigest)\n    backwardDigest.update(result.backwardDigest)\n\n    const forwardKey = new Aes128Ctr128BEKey(result.forwardKey, Buffer.alloc(16))\n    const backwardKey = new Aes128Ctr128BEKey(result.backwardKey, Buffer.alloc(16))\n\n    const target = new Target(idh, this, forwardDigest, backwardDigest, forwardKey, backwardKey)\n\n    this.targets.push(target)\n  }\n\n  private async waitTruncated() {\n    const future = new Future<Event, Event>()\n\n    try {\n      this.tor.tls.addEventListener(\"close\", future.err, { passive: true })\n      this.tor.tls.addEventListener(\"error\", future.err, { passive: true })\n      this.addEventListener(\"DESTROY\", future.err, { passive: true })\n      this.addEventListener(\"RELAY_TRUNCATED\", future.ok, { passive: true })\n      return await future.promise as MessageEvent<RelayTruncatedCell>\n    } catch (e: unknown) {\n      throw Events.error(e)\n    } finally {\n      this.tor.tls.removeEventListener(\"error\", future.err)\n      this.tor.tls.removeEventListener(\"close\", future.err)\n      this.removeEventListener(\"DESTROY\", future.err)\n      this.removeEventListener(\"RELAY_TRUNCATED\", future.ok)\n    }\n  }\n\n  async truncate(reason = RelayTruncateCell.reasons.NONE) {\n    const ptruncated = this.waitTruncated()\n    this.tor.send(await new RelayTruncateCell(this, undefined, reason).pack())\n    await ptruncated\n  }\n\n  async open(hostname: string, port: number, signal?: AbortSignal) {\n    const streamId = this._nonce++\n\n    const stream = new TcpStream(this, streamId, signal)\n    this.streams.set(streamId, stream)\n\n    const flags = new Bitmask(0)\n      .set(RelayBeginCell.flags.IPV4_OK, true)\n      .set(RelayBeginCell.flags.IPV6_NOT_OK, false)\n      .set(RelayBeginCell.flags.IPV6_PREFER, true)\n    this.tor.send(await new RelayBeginCell(this, stream, `${hostname}:${port}`, flags).pack())\n\n    return stream\n  }\n\n  async fetch(input: RequestInfo, init?: RequestInit) {\n    const req = new Request(input, init)\n    const url = new URL(req.url)\n    const port = Number(url.port) || 80\n\n    const tcp = await this.open(url.hostname, port, req.signal)\n    return await new HttpStream(tcp, req, url).res.promise\n  }\n}"],"names":["Events","future","Future","randomOf","LinkIPv6","LinkIPv4","LinkLegacyID","LinkModernID","X25519StaticSecret","ntor.request","RelayExtend2Cell","ntor.response","X25519PublicKey","ntor.finalize","Sha1Hasher","Aes128Ctr128BEKey","target","Target","RelayTruncateCell","TcpStream","Bitmask","RelayBeginCell","HttpStream"],"mappings":"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"}