{"version":3,"file":"ws.cjs","sources":["../../../../src/mods/tls/ws.ts"],"sourcesContent":["import { fixedCiphersuites } from \"libs/forge.js\"\nimport { Tls } from \"mods/tls/tls.js\"\n\nexport class TlsOverWs extends Tls {\n  readonly class = TlsOverWs\n\n  readonly connection\n\n  constructor(\n    readonly socket: WebSocket\n  ) {\n    super()\n\n    socket.addEventListener(\"message\", async e => {\n      const buffer = Buffer.from(await e.data.arrayBuffer())\n      this.connection.process(buffer.toString(\"binary\"))\n    }, { passive: true })\n\n    this.connection = window.forge.tls.createConnection({\n      server: false,\n      cipherSuites: Object.values(fixedCiphersuites) as any,\n      verify: (connection, verified, depth, certs) => {\n        return true;\n      },\n      connected: (connection) => {\n        this.dispatchEvent(new Event(\"open\"))\n      },\n      tlsDataReady: (connection) => {\n        const bytes = connection.tlsData.getBytes();\n        const data = Buffer.from(bytes, \"binary\")\n        this.socket.send(data)\n      },\n      dataReady: (connection) => {\n        const bytes = connection.data.getBytes();\n        const data = Buffer.from(bytes, \"binary\")\n\n        const event = new MessageEvent(\"message\", { data })\n        if (!this.dispatchEvent(event)) return\n      },\n      closed: (connection) => {\n        const event = new CloseEvent(\"close\")\n        if (!this.dispatchEvent(event)) return\n\n        this._closed = true\n      },\n      error: (connection, error) => {\n        const event = new ErrorEvent(\"error\", { error })\n        if (!this.dispatchEvent(event)) return\n      }\n    });\n  }\n\n}"],"names":["Tls","__awaiter","fixedCiphersuites"],"mappings":";;;;;;AAGM,MAAO,SAAU,SAAQA,OAAG,CAAA;AAKhC,IAAA,WAAA,CACW,MAAiB,EAAA;AAE1B,QAAA,KAAK,EAAE,CAAA;QAFE,IAAM,CAAA,MAAA,GAAN,MAAM,CAAW;QALnB,IAAK,CAAA,KAAA,GAAG,SAAS,CAAA;QASxB,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAM,CAAC,KAAGC,eAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AAC3C,YAAA,MAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAA;AACtD,YAAA,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAA;SACnD,CAAA,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAA;QAErB,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,gBAAgB,CAAC;AAClD,YAAA,MAAM,EAAE,KAAK;AACb,YAAA,YAAY,EAAE,MAAM,CAAC,MAAM,CAACC,uBAAiB,CAAQ;YACrD,MAAM,EAAE,CAAC,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,KAAI;AAC7C,gBAAA,OAAO,IAAI,CAAC;aACb;AACD,YAAA,SAAS,EAAE,CAAC,UAAU,KAAI;gBACxB,IAAI,CAAC,aAAa,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,CAAA;aACtC;AACD,YAAA,YAAY,EAAE,CAAC,UAAU,KAAI;gBAC3B,MAAM,KAAK,GAAG,UAAU,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;gBAC5C,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAA;AACzC,gBAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;aACvB;AACD,YAAA,SAAS,EAAE,CAAC,UAAU,KAAI;gBACxB,MAAM,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;gBACzC,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAA;gBAEzC,MAAM,KAAK,GAAG,IAAI,YAAY,CAAC,SAAS,EAAE,EAAE,IAAI,EAAE,CAAC,CAAA;AACnD,gBAAA,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;oBAAE,OAAM;aACvC;AACD,YAAA,MAAM,EAAE,CAAC,UAAU,KAAI;AACrB,gBAAA,MAAM,KAAK,GAAG,IAAI,UAAU,CAAC,OAAO,CAAC,CAAA;AACrC,gBAAA,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;oBAAE,OAAM;AAEtC,gBAAA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAA;aACpB;AACD,YAAA,KAAK,EAAE,CAAC,UAAU,EAAE,KAAK,KAAI;gBAC3B,MAAM,KAAK,GAAG,IAAI,UAAU,CAAC,OAAO,EAAE,EAAE,KAAK,EAAE,CAAC,CAAA;AAChD,gBAAA,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;oBAAE,OAAM;aACvC;AACF,SAAA,CAAC,CAAC;KACJ;AAEF;;;;"}